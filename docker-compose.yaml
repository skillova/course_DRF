version: '3'

services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"
    test: redis-cli ping

  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
  make_migrations:
    build: .
    command: sh -c "python manage.py migrate"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
  app:
    build: .
    tty: true
    ports:
      - '8000:8000'
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      make_migrations:
        condition: service_completed_successfully
    volumes:
      - .:/app
    env_file:
      - .env
  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: always
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      make_migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started
    env_file:
      - .env
volumes:
  pg_data: